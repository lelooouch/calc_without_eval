import random
import sys
import time

class Person:

    def __init__(self, name=str, hp=int, attack=int):
        self.name = name
        self.hp = hp
        self.attack = attack

    def attack_other(self, other):
        while other.hp > 0 and self.hp > 0:
            print(f'\n–•–æ–¥ {self.name}, –±—Ä–æ—Å–∞–µ–º –∫–æ—Å—Ç–∏...üé≤')
            time.sleep(1)
            a = [random.randint(1, 6), random.randint(1, 6)]
            print(f'–í—ã–ø–∞–ª–æ: {a[0]} –∏ {a[1]}, –≤ —Å—É–º–º–µ: {sum(a)}')
            print(f'{other.name}, –±—Ä–æ—Å–∞–µ—Ç –∫–æ—Å—Ç–∏...üé≤')
            time.sleep(1)
            b = [random.randint(1, 6), random.randint(1, 6)]
            print(f'–í—ã–ø–∞–ª–æ: {b[0]} –∏ {b[1]}, –≤ —Å—É–º–º–µ: {sum(b)}')

            if sum(a) > sum(b):
                print(f'{self.name} —Å–æ–≤–µ—Ä—à–∞–µ—Ç —É—Å–∏–ª–µ–Ω–Ω—É—é –∞—Ç–∞–∫—É!')
                other.hp -= self.attack + (sum(a) - sum(b)) * 10
            else:
                print(f'{self.name} —Å–æ–≤–µ—Ä—à–∞–µ—Ç –æ–±—ã—á–Ω—É—é –∞—Ç–∞–∫—É.')
                other.hp -= self.attack

            if other.hp <= 0:
                print(f'\n{other.name} - –ü—Ä–æ–∏–≥—Ä–∞–ª! –ü–æ–±–µ–¥–∞ –¥–æ—Å—Ç–∞–µ—Ç—Å—è {self.name}!!!')
                return
            else:
                print(f'\n–£ {other.name} –æ—Å—Ç–∞–ª–æ—Å—å {other.hp}—Ö–ø!')
                print('–ë–∏—Ç–≤–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!')
                print(f'{other.name} –¥–∞–µ—Ç –æ—Ç–ø–æ—Ä! –ó–∞—â–∏—â–∞–π—Å—è!')
                self.hp -= other.attack
                print(f'–£ {self.name} –æ—Å—Ç–∞–ª–æ—Å—å {self.hp}—Ö–ø!')



    def info(self):
        return f'-----------\n–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {self.name}\n–£—Ä–æ–Ω: {self.attack}\n–•–ø: {self.hp}\n-----------\n'


class Knight(Person):

    def __init__(self, name, hp=float, attack=float):
        super().__init__(name, hp, attack)
        self.bag = []

    def inventory(self):
        if self.object == 'hill':
            self.hp += 100
            self.object = None
        elif self.object == 'damage':
            self.attack += 100
            self.object = None

    def open_chest(self):
        chest = ['hill', 'damage', 'angry_chest']
        object_chest = random.choice(chest)
        if object_chest == 'hill':
            print('\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è!')
            print(f'–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {self.hp}—Ö–ø.')
            print('–ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Å–µ–π—á–∞—Å –∏–ª–∏ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.')
            print('(–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –±–æ–ª—å—à–µ —Ö–ø, —á–µ–º –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã, –≤—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–µ –º–æ–∂–µ—Ç–µ)')
            print('–ß—Ç–æ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ?')
            print('1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å')
            print('2. –ü–æ–ª–æ–∂–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')

            d1 = int(input('–ù–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ: '))
            if d1 == 1:
                self.hp += 100
            elif d1 == 2:
                self.bag.append('hill')

        elif object_chest == 'damage':
            print('\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–µ–ª—å–µ —Å–∏–ª—ã!')
            print(f'–°–µ–π—á–∞—Å —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ {self.attack}')
            print('–ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Å–µ–π—á–∞—Å –∏–ª–∏ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.')
            print('(–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞–µ—Ç –Ω–∞ –æ–¥–Ω—É –±–∏—Ç–≤—É)')
            print('–ß—Ç–æ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ?')
            print('1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å')
            print('2. –ü–æ–ª–æ–∂–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')

            d1 = int(input('–ù–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ: '))
            if d1 == 1:
                self.attack += 50
            elif d1 == 2:
                self.bag.append('damage')

        else:
            print('\n–°—É–Ω–¥—É–∫ –æ–∫–∞–∑–∞–ª—Å—è –ª–æ–≤—É—à–∫–æ–π! –ó–∞—â–∏—â–∞–π—Ç–µ—Å—å!')
            super().attack_other(AngryChest('–°—É–Ω–¥—É–∫', 200, 30))


class Dragon(Person):

    def __init__(self, level=int, name=str, hp=float, attack=float):
        super().__init__(name, hp, attack)
        self.level = level

    def attack_dragon(self, other):

        print(f'–•–æ–¥ {other.name}, –±—Ä–æ—Å–∞–µ–º –∫–æ—Å—Ç–∏...üé≤')
        a = [random.randint(1, 6), random.randint(1, 6)]
        print(f'–í—ã–ø–∞–ª–æ: {a[0]} –∏ {a[1]}, –≤ —Å—É–º–º–µ: {sum(a)}')
        print(f'–î—Ä–∞–∫–æ–Ω, –≤–∑–º–∞—Ö–∏–≤–∞–µ—Ç –∫—Ä—ã–ª—å—è–º–∏...')
        b = [random.randint(100, 1000), random.randint(100, 1000)]
        print(f'–í—ã–ø–∞–ª–æ: {b[0]} –∏ {b[1]}, –≤ —Å—É–º–º–µ: {sum(b)}')
        if sum(a) < sum(b):
            print(f'–î—Ä–∞–∫–æ–Ω —Å–æ–≤–µ—Ä—à–∞–µ—Ç –∞—Ç–∞–∫—É!')
            other.hp -= self.attack + (sum(b) - sum(a)) * 10
        print()


class AngryChest(Person):
    def __init__(self, name, hp=float, attack=float):
        super().__init__(name, hp, attack)
