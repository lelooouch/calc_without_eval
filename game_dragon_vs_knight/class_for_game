import random
import sys
import time

class Person:

    def __init__(self, name=str, hp=int, attack=int):
        self.name = name
        self.hp = hp
        self.attack = attack

    def attack_other(self, other):
        while other.hp > 0 and self.hp > 0:
            print(f'\n–•–æ–¥ {self.name}, –±—Ä–æ—Å–∞–µ–º –∫–æ—Å—Ç–∏...üé≤')
            time.sleep(1)
            a = [random.randint(1, 6), random.randint(1, 6)]
            print(f'–í—ã–ø–∞–ª–æ: {a[0]} –∏ {a[1]}, –≤ —Å—É–º–º–µ: {sum(a)}')
            print(f'{other.name}, –±—Ä–æ—Å–∞–µ—Ç –∫–æ—Å—Ç–∏...üé≤')
            time.sleep(1)
            b = [random.randint(1, 6), random.randint(1, 6)]
            print(f'–í—ã–ø–∞–ª–æ: {b[0]} –∏ {b[1]}, –≤ —Å—É–º–º–µ: {sum(b)}')

            if sum(a) > sum(b):
                print(f'{self.name} —Å–æ–≤–µ—Ä—à–∞–µ—Ç —É—Å–∏–ª–µ–Ω–Ω—É—é –∞—Ç–∞–∫—É!')
                other.hp -= self.attack + (sum(a) - sum(b)) * 10
            else:
                print(f'{self.name} —Å–æ–≤–µ—Ä—à–∞–µ—Ç –æ–±—ã—á–Ω—É—é –∞—Ç–∞–∫—É.')
                other.hp -= self.attack

            if other.hp <= 0:
                print(f'\n{other.name} - –ü—Ä–æ–∏–≥—Ä–∞–ª! –ü–æ–±–µ–¥–∞ –¥–æ—Å—Ç–∞–µ—Ç—Å—è {self.name}!!!')
                return
            else:
                print(f'\n–£ {other.name} –æ—Å—Ç–∞–ª–æ—Å—å {other.hp}—Ö–ø!')
                print('–ë–∏—Ç–≤–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!')
                print(f'{other.name} –¥–∞–µ—Ç –æ—Ç–ø–æ—Ä! –ó–∞—â–∏—â–∞–π—Å—è!')
                self.hp -= other.attack
                if self.hp <= 0:
                    print(f'–£–≤—ã! –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏üíÄ')
                    sys.exit()
                else:
                    print(f'–£ {self.name} –æ—Å—Ç–∞–ª–æ—Å—å {self.hp}—Ö–ø!')



    def info(self):
        return f'-----------\n–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞: {self.name}\n–£—Ä–æ–Ω: {self.attack}\n–•–ø: {self.hp}\n-----------\n'


class Knight(Person):

    def __init__(self, name, hp=float, attack=float):
        super().__init__(name, hp, attack)
        self.bag = []
        self.balance = 0

    def inventory(self):
        if len(self.bag) > 0:
            print('\n–í –≤–∞—à–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –µ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã! –•–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –ø–µ—Ä–µ–¥ –±–∏—Ç–≤–æ–π?')
            print('\n–ß—Ç–æ –≤—ã —Ä–µ—à–∞–µ—Ç–µ?')
            print('1. –ó–∞–≥–ª—è–Ω—É—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')
            print('2. –ù–µ –∑–∞–≥–ª—è–¥—ã–≤–∞—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')
            b1 = int(input('–ù–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ: '))
            if b1 == 1:
                print(f'–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ:\n{self.bag}')
                print('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ.')
                flag = True
                while flag:
                    ob = int(input('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä: '))
                    if len(self.bag) < ob:
                        print('–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!')
                    else:
                        object_inventory = self.bag[ob - 1]
                        flag = False

                        if object_inventory == '–∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è':
                            self.hp += 100
                            print(f'–í–∞—à–µ —Ö–ø - {self.hp}')
                            self.bag.remove(object_inventory)
                        elif object_inventory == '–∑–µ–ª—å–µ —Å–∏–ª—ã':
                            self.attack += 50
                            print(f'–í–∞—à–∞ –∞—Ç–∞–∫–∞ - {self.attack}')
                            self.bag.remove(object_inventory)
                        elif object_inventory == '–±—É–ª–∫–∞ —Ö–ª–µ–±–∞':
                            self.hp += 30
                            print(f'–í–∞—à–µ —Ö–ø - {self.hp}')
                            self.bag.remove(object_inventory)
                        elif object_inventory == '–æ–∫–æ—Ä–æ—á–µ–∫':
                            self.hp += 40
                            print(f'–í–∞—à–µ —Ö–ø - {self.hp}')
                            self.bag.remove(object_inventory)


    # —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—É–Ω–¥—É–∫–∞
    def open_chest(self, mastery = None):
        chest = ['–∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è', '–∑–µ–ª—å–µ —Å–∏–ª—ã', 'angry_chest']
        object_chest = random.choice(chest)
        if object_chest != 'angry_chest':
            flag = self.mastery_for_chest(mastery)

            if object_chest == '–∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è' and flag:
                print('\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è!')
                print(f'–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {self.hp}—Ö–ø.')
                print('–ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Å–µ–π—á–∞—Å –∏–ª–∏ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.')
                print('–ß—Ç–æ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ?')
                print('1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å')
                print('2. –ü–æ–ª–æ–∂–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')

                d1 = int(input('–ù–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ: '))
                if d1 == 1:
                    self.hp += 100
                elif d1 == 2:
                    self.bag.append('–∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è')

            elif object_chest == '–∑–µ–ª—å–µ —Å–∏–ª—ã' and flag:
                print('\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–µ–ª—å–µ —Å–∏–ª—ã!')
                print(f'–°–µ–π—á–∞—Å —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ {self.attack}')
                print('–ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Å–µ–π—á–∞—Å –∏–ª–∏ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.')
                #print('(–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞–µ—Ç –Ω–∞ –æ–¥–Ω—É –±–∏—Ç–≤—É)')
                print('–ß—Ç–æ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ?')
                print('1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å')
                print('2. –ü–æ–ª–æ–∂–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')

                d1 = int(input('–ù–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ: '))
                if d1 == 1:
                    self.attack += 50
                elif d1 == 2:
                    self.bag.append('–∑–µ–ª—å–µ —Å–∏–ª—ã')

        else:
            print('\n–°—É–Ω–¥—É–∫ –æ–∫–∞–∑–∞–ª—Å—è –ª–æ–≤—É—à–∫–æ–π! –ó–∞—â–∏—â–∞–π—Ç–µ—Å—å!')
            super().attack_other(OtherEnemeis('–°—É–Ω–¥—É–∫', 200, 30))
            if self.hp > 0:
                money = random.randint(40, 50)
                self.balance += money
                print(f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {money} –º–æ–Ω–µ—Ç!')


    # —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥–±–æ—Ä–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–º–∫–∞
    def mastery_for_chest(self, mastery = random.choice(['–£—á–µ–Ω–∏–∫', '–ê–¥–µ–ø—Ç', '–≠–∫—Å–ø–µ—Ä—Ç', '–ú–∞—Å—Ç–µ—Ä'])):
        print(f'\n–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–º–∫–∞ - {mastery}.')
        if mastery == '–£—á–µ–Ω–∏–∫':
            money = random.randint(10, 30)
            random_number = random.randint(1, 4)
            print('\n–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—É–Ω–¥—É–∫–∞ –Ω–∞–¥–æ –æ—Ç–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 4!')
            print('–£ –≤–∞—Å –µ—Å—Ç—å 3 –ø–æ–ø—ã—Ç–∫–∏.')
            for i in range(3):
                num = int(input('–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: '))
                if num == random_number:
                    self.balance += money
                    print(f'\n–°—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç! –í—ã –Ω–∞—à–ª–∏ {money} –º–æ–Ω–µ—Ç!')
                    print(f'–í–∞—à –±–∞–ª–∞–Ω—Å - {self.balance}')
                    return True
                elif i == 2:
                    print('\n–£–≤—ã! –í—Å–µ –æ—Ç–º—ã—á–∫–∏ —Å–ª–æ–º–∞–ª–∏—Å—å.')
                    return False

        elif mastery == '–ê–¥–µ–ø—Ç':
            money = random.randint(40, 60)
            random_number = random.randint(1, 6)
            print('\n–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—É–Ω–¥—É–∫–∞ –Ω–∞–¥–æ –æ—Ç–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 6!')
            print('–£ –≤–∞—Å –µ—Å—Ç—å 3 –ø–æ–ø—ã—Ç–∫–∏.')
            for i in range(3):
                num = int(input('–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: '))
                if num == random_number:
                    self.balance += money
                    print(f'\n–°—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç! –í—ã –Ω–∞—à–ª–∏ {money} –º–æ–Ω–µ—Ç!')
                    print(f'–í–∞—à –±–∞–ª–∞–Ω—Å - {self.balance}')
                    return True
                elif i == 2:
                    print('\n–£–≤—ã! –í—Å–µ –æ—Ç–º—ã—á–∫–∏ —Å–ª–æ–º–∞–ª–∏—Å—å.')
                    return False

        elif mastery == '–≠–∫—Å–ø–µ—Ä—Ç':
            money = random.randint(70, 90)
            random_number = random.randint(1, 8)
            print('\n–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—É–Ω–¥—É–∫–∞ –Ω–∞–¥–æ –æ—Ç–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 8!')
            print('–£ –≤–∞—Å –µ—Å—Ç—å 3 –ø–æ–ø—ã—Ç–∫–∏.')
            for i in range(3):
                num = int(input('–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: '))
                if num == random_number:
                    self.balance += money
                    print(f'\n–°—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç! –í—ã –Ω–∞—à–ª–∏ {money} –º–æ–Ω–µ—Ç!')
                    print(f'–í–∞—à –±–∞–ª–∞–Ω—Å - {self.balance}')
                    return True
                elif i == 2:
                    print('\n–£–≤—ã! –í—Å–µ –æ—Ç–º—ã—á–∫–∏ —Å–ª–æ–º–∞–ª–∏—Å—å.')
                    return False

        elif mastery == '–ú–∞—Å—Ç–µ—Ä':
            money = random.randint(100, 120)
            random_number = random.randint(1, 10)
            print('\n–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—É–Ω–¥—É–∫–∞ –Ω–∞–¥–æ –æ—Ç–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 10!')
            print('–£ –≤–∞—Å –µ—Å—Ç—å 3 –ø–æ–ø—ã—Ç–∫–∏.')
            for i in range(3):
                num = int(input('–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: '))
                if num == random_number:
                    self.balance += money
                    print(f'\n–°—É–Ω–¥—É–∫ –æ—Ç–∫—Ä—ã—Ç! –í—ã –Ω–∞—à–ª–∏ {money} –º–æ–Ω–µ—Ç!')
                    print(f'–í–∞—à –±–∞–ª–∞–Ω—Å - {self.balance}')
                    return True
                elif i == 2:
                    print('\n–£–≤—ã! –í—Å–µ –æ—Ç–º—ã—á–∫–∏ —Å–ª–æ–º–∞–ª–∏—Å—å.')
                    return False


class Dragon(Person):

    def __init__(self, level=int, name=str, hp=float, attack=float):
        super().__init__(name, hp, attack)
        self.level = level

    def attack_dragon(self, other):

        print(f'–•–æ–¥ {other.name}, –±—Ä–æ—Å–∞–µ–º –∫–æ—Å—Ç–∏...üé≤')
        a = [random.randint(1, 6), random.randint(1, 6)]
        print(f'–í—ã–ø–∞–ª–æ: {a[0]} –∏ {a[1]}, –≤ —Å—É–º–º–µ: {sum(a)}')
        print(f'–î—Ä–∞–∫–æ–Ω, –≤–∑–º–∞—Ö–∏–≤–∞–µ—Ç –∫—Ä—ã–ª—å—è–º–∏...')
        b = [random.randint(100, 1000), random.randint(100, 1000)]
        print(f'–í—ã–ø–∞–ª–æ: {b[0]} –∏ {b[1]}, –≤ —Å—É–º–º–µ: {sum(b)}')
        if sum(a) < sum(b):
            print(f'–î—Ä–∞–∫–æ–Ω —Å–æ–≤–µ—Ä—à–∞–µ—Ç –∞—Ç–∞–∫—É!')
            other.hp -= self.attack + (sum(b) - sum(a)) * 10
        print()


class OtherEnemeis(Person):

    def __init__(self, name, hp=float, attack=float):
        super().__init__(name, hp, attack)

